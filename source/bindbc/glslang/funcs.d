/*
Copyright (c) 2025 Timur Gafarov.

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/
module bindbc.glslang.funcs;

import bindbc.glslang.signatures;

__gshared
{
    f_glslang_get_version glslang_get_version;
    
    f_glslang_initialize_process glslang_initialize_process;
    f_glslang_finalize_process glslang_finalize_process;
    
    f_glslang_shader_create glslang_shader_create;
    f_glslang_shader_delete glslang_shader_delete;
    f_glslang_shader_set_preamble glslang_shader_set_preamble;
    f_glslang_shader_shift_binding glslang_shader_shift_binding;
    f_glslang_shader_shift_binding_for_set glslang_shader_shift_binding_for_set;
    f_glslang_shader_set_options glslang_shader_set_options;
    f_glslang_shader_set_glsl_version glslang_shader_set_glsl_version;
    f_glslang_shader_set_default_uniform_block_set_and_binding glslang_shader_set_default_uniform_block_set_and_binding;
    f_glslang_shader_set_default_uniform_block_name glslang_shader_set_default_uniform_block_name;
    f_glslang_shader_set_resource_set_binding glslang_shader_set_resource_set_binding;
    f_glslang_shader_preprocess glslang_shader_preprocess;
    f_glslang_shader_parse glslang_shader_parse;
    f_glslang_shader_get_preprocessed_code glslang_shader_get_preprocessed_code;
    f_glslang_shader_set_preprocessed_code glslang_shader_set_preprocessed_code;
    f_glslang_shader_get_info_log glslang_shader_get_info_log;
    f_glslang_shader_get_info_debug_log glslang_shader_get_info_debug_log;
    
    f_glslang_program_create glslang_program_create;
    f_glslang_program_delete glslang_program_delete;
    f_glslang_program_add_shader glslang_program_add_shader;
    f_glslang_program_link glslang_program_link;
    f_glslang_program_add_source_text glslang_program_add_source_text;
    f_glslang_program_set_source_file glslang_program_set_source_file;
    f_glslang_program_map_io glslang_program_map_io;
    f_glslang_program_map_io_with_resolver_and_mapper glslang_program_map_io_with_resolver_and_mapper;
    f_glslang_program_SPIRV_generate glslang_program_SPIRV_generate;
    f_glslang_program_SPIRV_generate_with_options glslang_program_SPIRV_generate_with_options;
    f_glslang_program_SPIRV_get_size glslang_program_SPIRV_get_size;
    f_glslang_program_SPIRV_get glslang_program_SPIRV_get;
    f_glslang_program_SPIRV_get_ptr glslang_program_SPIRV_get_ptr;
    f_glslang_program_SPIRV_get_messages glslang_program_SPIRV_get_messages;
    f_glslang_program_get_info_log glslang_program_get_info_log;
    f_glslang_program_get_info_debug_log glslang_program_get_info_debug_log;
    f_glslang_glsl_mapper_create glslang_glsl_mapper_create;
    f_glslang_glsl_mapper_delete glslang_glsl_mapper_delete;
    f_glslang_glsl_resolver_create glslang_glsl_resolver_create;
    f_glslang_glsl_resolver_delete glslang_glsl_resolver_delete;
}
